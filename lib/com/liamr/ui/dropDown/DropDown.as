package com.liamr.ui.dropDown {			import flash.text.TextField;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.*;		import com.liamr.ui.dropDown.Events.DropDownEvent;		//TweenLite		import gs.TweenLite;	import gs.easing.*;			/**		 * DropDown - A tasty drop down menu class		 * @author: Liam Rutherford (http://www.liamr.com)		 * @e-mail: hello@liamr.com		 * @Copyright: Liam Rutherford		 * @version: 1.0;		 * @date: 17/05/09		 */		 		 /* To add - Keyboard control, selectValue*/			public class DropDown extends MovieClip {						//Event				static public var ITEM_SELECTED:String = "itemSelected";				//Array				public var dropDownArray:Array = [];				//Item				private var listHolder:Sprite;				private var listScroller:Sprite;				private var masker:Sprite;				private var listBg:Sprite;				private var listHeight:Number;				private var listOpen:Boolean = false;				//Scrollable				private var scrollable:Boolean;				//Hit				//public var hit:MovieClip;				//Selected Item				public var selectedId:int;				public var selectedLabel:String;				public var selectedData:*;										public function DropDown(_array:Array, _message:String = "Please choose...", _scrollable:Boolean = false, _listHeight:Number = 100) {						dropDownArray = _array;						listHeight = _listHeight;						scrollable = _scrollable;						selectedItem_txt.text = _message;						addEventListener(Event.ADDED_TO_STAGE, init);					}				private function init(e:Event):void{						//Add function to hit area						hit.addEventListener(MouseEvent.CLICK, openClose);						hit.buttonMode = true;						stage.addEventListener(MouseEvent.CLICK, stageClose);						buildList();					}				private function buildList():void{						listHolder = new Sprite();						addChildAt(listHolder, 0);												//list scroller						listScroller = new Sprite();						listHolder.addChildAt(listScroller, 0);						listHolder.y = 10;						//Build list						for (var i:int = 0; i < dropDownArray.length; i ++){								var listItem:DropDownItem = new DropDownItem();								listItem._id = i;								listItem.item_txt.text = dropDownArray[i].label;								listItem._data = dropDownArray[i].data;								listItem.y = listScroller.height;								listItem.mouseChildren = false;								listItem.buttonMode = true;												listItem.addEventListener(MouseEvent.MOUSE_OVER, itemOver);								listItem.addEventListener(MouseEvent.MOUSE_OUT, itemOut);								listItem.addEventListener(MouseEvent.CLICK, selectItem);								listScroller.addChild(listItem);							}						//Reformat dropdown mask if drop height is less than the height of items.						trace(listScroller.height);						if(listScroller.height < listHeight){								listHeight = listScroller.height;							}						//bg						listBg = new Sprite();						listBg.graphics.beginFill(0x000000);			listBg.graphics.drawRoundRect(0, -10, listScroller.width, listScroller.height + 10, 11);			listBg.graphics.endFill();						listScroller.addChildAt(listBg, 0);						//listBg.y = - listHeight;												//mask						masker = new Sprite();						masker.graphics.beginFill(0x000000);			masker.graphics.drawRoundRect(0, -10, listScroller.width, listHeight + 10, 11);			masker.graphics.endFill();						listHolder.addChild(masker);						masker.y = - int(listHeight - 10);						listScroller.mask = masker;						//Scrollable						if(scrollable){								initScrolling();							}					}				public function openClose(e:Event = null):void{						if(listOpen){								close();							} else {								open();							}					}				public function stageClose(e:Event):void{						//trace(e.target.name);						if(e.target.name != "hit"){								close();							}					}				//OPEN LIST				public function open(e:Event = null):void{						listOpen = true;						TweenLite.to(masker, 0.5, {y:0, ease:Strong.easeOut});						TweenLite.to(listHolder, 0.5, {y:hit.height, ease:Strong.easeOut});					}				//CLOSE LIST				public function close(e:Event = null):void{			trace("close");						listOpen = false;						TweenLite.to(masker, 0.5, {y:- int(listHeight - 10), ease:Strong.easeOut});						TweenLite.to(listHolder, 0.5, {y:10, ease:Strong.easeOut});						//Make sure scroller is back 						TweenLite.to(listScroller, 0.1, {y:  0, ease:Strong.easeOut});					}								//SELECTED				private function itemOver(e:Event):void{									TweenLite.to(e.target, 0.5, {alpha:0.8, ease:Strong.easeOut});								}				private function itemOut(e:Event):void{						TweenLite.to(e.target, 0.5, {alpha:1, ease:Strong.easeOut});					}				private function selectItem(e:Event):void{						selectedId = e.target._id;						selectedLabel = e.target.item_txt.text;						selectedData = e.target._data;						selectedItem_txt.text = e.target.item_txt.text;						close();						dispatchEvent( new DropDownEvent(ITEM_SELECTED, selectedId, selectedLabel, selectedData));					}				//Scrolling				private function initScrolling():void {			this.addEventListener(MouseEvent.ROLL_OVER,startScroll);			this.addEventListener(MouseEvent.ROLL_OUT, stopScroll);			addEventListener(Event.ENTER_FRAME, listScroll);		}		private function startScroll(e:MouseEvent):void {			addEventListener(Event.ENTER_FRAME, listScroll);		}		private function stopScroll(e:MouseEvent):void {			removeEventListener(Event.ENTER_FRAME, listScroll);		}				private function listScroll(e:Event):void{						var scrollDistance:int = masker.height;						if(listOpen){							if(listScroller.height > scrollDistance){										listScroller.y += Math.cos((-masker.mouseY/scrollDistance)*Math.PI) * 3;										if (listScroller.y>0) {						listScroller.y = 0;					}					if (-listScroller.y>(listScroller.height-scrollDistance)) {						listScroller.y = -(listScroller.height -scrollDistance);									}									} else {					listScroller.y = 0;				}			}		}							}}